#!/bin/bash
# test-story-3.2.sh - Testes para Story 3.2 (Obsidian Simplificado e Pr√©-Configurado)
# Sistema: Assistente Pessoal IA

set -e

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

TESTS_PASSED=0
TESTS_FAILED=0

info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; ((TESTS_PASSED++)); }
fail() { echo -e "${RED}‚ùå $1${NC}"; ((TESTS_FAILED++)); }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }

echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "  Testes Story 3.2 - Obsidian Simplificado e Pr√©-Configurado"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""

# ============================================
# TESTE 1: Dashboard Visual üè† IN√çCIO.md (AC1)
# ============================================
info "Teste 1: Verificando Dashboard Visual (AC1)..."

# Verificar se o script de upgrade cria o arquivo
if grep -q "IN√çCIO.md" "scripts/upgrade-to-epic3.sh"; then
    success "Dashboard IN√çCIO.md est√° no script de upgrade"

    # Verificar conte√∫do
    if grep -q "Captura R√°pida" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard cont√©m se√ß√£o 'Captura R√°pida'"
    else
        fail "Dashboard N√ÉO cont√©m 'Captura R√°pida'"
    fi

    if grep -q "Informa√ß√µes Organizadas" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard cont√©m se√ß√£o 'Informa√ß√µes Organizadas'"
    else
        fail "Dashboard N√ÉO cont√©m 'Informa√ß√µes Organizadas'"
    fi

    if grep -q "Conversar com Agentes" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard cont√©m se√ß√£o 'Conversar com Agentes'"
    else
        fail "Dashboard N√ÉO cont√©m 'Conversar com Agentes'"
    fi

    if grep -q "Busca R√°pida" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard cont√©m se√ß√£o 'Busca R√°pida'"
    else
        fail "Dashboard N√ÉO cont√©m 'Busca R√°pida'"
    fi

    if grep -q "Ver Meu Progresso" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard cont√©m se√ß√£o 'Ver Meu Progresso'"
    else
        fail "Dashboard N√ÉO cont√©m 'Ver Meu Progresso'"
    fi

    # Verificar emojis Unicode
    if grep -q "üì•\|üìÇ\|ü§ñ\|üîç\|üìä" "scripts/upgrade-to-epic3.sh"; then
        success "Dashboard usa emojis Unicode"
    else
        fail "Dashboard N√ÉO usa emojis Unicode"
    fi
else
    fail "Dashboard IN√çCIO.md N√ÉO est√° no script de upgrade"
fi

# ============================================
# TESTE 2: Obsidian Workspace Configurado (AC2)
# ============================================
info "Teste 2: Verificando configura√ß√£o de Workspace (AC2)..."

# Verificar script de merge
if [ -f "scripts/merge-obsidian-config.sh" ]; then
    success "Script merge-obsidian-config.sh existe"

    # Verificar hotkeys configurados
    if grep -q "switcher:open" "scripts/merge-obsidian-config.sh"; then
        success "Hotkey Ctrl+O (Quick switcher) configurado"
    else
        fail "Hotkey Ctrl+O N√ÉO configurado"
    fi

    # Verificar app.json
    if grep -q "app.json" "scripts/merge-obsidian-config.sh"; then
        success "Configura√ß√£o app.json inclu√≠da"
    else
        fail "Configura√ß√£o app.json N√ÉO inclu√≠da"
    fi

    # Verificar graph.json
    if grep -q "graph.json" "scripts/merge-obsidian-config.sh"; then
        success "Configura√ß√£o graph.json inclu√≠da"
    else
        fail "Configura√ß√£o graph.json N√ÉO inclu√≠da"
    fi

    # Verificar templates
    if grep -q "template-projeto\|template-pessoa" "scripts/merge-obsidian-config.sh"; then
        success "Templates Obsidian criados"
    else
        fail "Templates Obsidian N√ÉO criados"
    fi
else
    fail "Script merge-obsidian-config.sh N√ÉO existe"
fi

# ============================================
# TESTE 3: Guia COMO-BUSCAR.md (AC3)
# ============================================
info "Teste 3: Verificando guia de busca (AC3)..."

if grep -q "COMO-BUSCAR.md" "scripts/upgrade-to-epic3.sh"; then
    success "COMO-BUSCAR.md est√° no script de upgrade"

    # Verificar conte√∫do
    if grep -q "Busca R√°pida" "scripts/upgrade-to-epic3.sh"; then
        success "Guia cont√©m 'Busca R√°pida (Ctrl+O)'"
    else
        fail "Guia N√ÉO cont√©m 'Busca R√°pida'"
    fi

    if grep -q "Busca Dentro dos Arquivos" "scripts/upgrade-to-epic3.sh" || \
       grep -q "Ctrl + Shift + F" "scripts/upgrade-to-epic3.sh"; then
        success "Guia cont√©m 'Busca em Arquivos (Ctrl+Shift+F)'"
    else
        fail "Guia N√ÉO cont√©m 'Busca em Arquivos'"
    fi

    if grep -q "Busca por Data" "scripts/upgrade-to-epic3.sh"; then
        success "Guia cont√©m 'Busca por Data'"
    else
        fail "Guia N√ÉO cont√©m 'Busca por Data'"
    fi

    if grep -q "\\[\\[" "scripts/upgrade-to-epic3.sh"; then
        success "Guia cont√©m navega√ß√£o por [[Links]]"
    else
        fail "Guia N√ÉO cont√©m navega√ß√£o por [[Links]]"
    fi

    if grep -q "TDAH\|relacionada" "scripts/upgrade-to-epic3.sh"; then
        success "Guia cont√©m truque TDAH"
    else
        fail "Guia N√ÉO cont√©m truque TDAH"
    fi
else
    fail "COMO-BUSCAR.md N√ÉO est√° no script de upgrade"
fi

# ============================================
# TESTE 4: Tutorial OBSIDIAN-EM-5-MINUTOS.md (AC4)
# ============================================
info "Teste 4: Verificando tutorial Obsidian (AC4)..."

if grep -q "OBSIDIAN-EM-5-MINUTOS.md" "scripts/upgrade-to-epic3.sh"; then
    success "OBSIDIAN-EM-5-MINUTOS.md est√° no script de upgrade"

    # Verificar 5 se√ß√µes
    SECTION_COUNT=0

    if grep -A 5 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "Abrir Arquivos\|Ctrl+O"; then
        ((SECTION_COUNT++))
    fi

    if grep -A 5 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "Buscar Texto\|Ctrl+Shift+F"; then
        ((SECTION_COUNT++))
    fi

    if grep -A 5 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "Seguir.*link\|\\[\\["; then
        ((SECTION_COUNT++))
    fi

    if grep -A 5 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "Graph\|grafo"; then
        ((SECTION_COUNT++))
    fi

    if grep -A 5 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "Voltar\|IN√çCIO"; then
        ((SECTION_COUNT++))
    fi

    if [ $SECTION_COUNT -ge 4 ]; then
        success "Tutorial cont√©m pelo menos 4 das 5 se√ß√µes principais"
    else
        fail "Tutorial cont√©m apenas $SECTION_COUNT de 5 se√ß√µes"
    fi

    # Link de volta ao in√≠cio
    if grep -A 30 "OBSIDIAN-EM-5-MINUTOS" "scripts/upgrade-to-epic3.sh" | grep -q "IN√çCIO"; then
        success "Tutorial tem link de volta ao IN√çCIO"
    else
        fail "Tutorial N√ÉO tem link de volta ao IN√çCIO"
    fi
else
    fail "OBSIDIAN-EM-5-MINUTOS.md N√ÉO est√° no script de upgrade"
fi

# ============================================
# TESTE 5: Cart√£o ATALHOS-OBSIDIAN.md (AC5)
# ============================================
info "Teste 5: Verificando cart√£o de atalhos (AC5)..."

if grep -q "ATALHOS-OBSIDIAN.md" "scripts/upgrade-to-epic3.sh"; then
    success "ATALHOS-OBSIDIAN.md est√° no script de upgrade"

    # Verificar atalhos principais
    HOTKEYS_COUNT=0

    if grep -A 20 "ATALHOS-OBSIDIAN" "scripts/upgrade-to-epic3.sh" | grep -q "Ctrl + O"; then
        ((HOTKEYS_COUNT++))
    fi

    if grep -A 20 "ATALHOS-OBSIDIAN" "scripts/upgrade-to-epic3.sh" | grep -q "Ctrl + Shift + F"; then
        ((HOTKEYS_COUNT++))
    fi

    if grep -A 20 "ATALHOS-OBSIDIAN" "scripts/upgrade-to-epic3.sh" | grep -q "Alt.*‚Üê\|Alt.*‚Üí"; then
        ((HOTKEYS_COUNT++))
    fi

    if [ $HOTKEYS_COUNT -ge 3 ]; then
        success "Cart√£o cont√©m pelo menos 3 atalhos essenciais"
    else
        fail "Cart√£o cont√©m apenas $HOTKEYS_COUNT de 5 atalhos"
    fi
else
    fail "ATALHOS-OBSIDIAN.md N√ÉO est√° no script de upgrade"
fi

# ============================================
# TESTE 6: Integra√ß√£o com Setup/Upgrade
# ============================================
info "Teste 6: Verificando integra√ß√£o com scripts..."

# Verificar que upgrade chama merge
if grep -q "merge-obsidian-config" "scripts/upgrade-to-epic3.sh"; then
    success "Upgrade chama script de merge de configura√ß√µes"
else
    fail "Upgrade N√ÉO chama merge de configura√ß√µes"
fi

# Verificar fun√ß√£o create_if_not_exists
if grep -q "create_if_not_exists" "scripts/upgrade-to-epic3.sh"; then
    success "Usa fun√ß√£o n√£o-destrutiva create_if_not_exists"
else
    fail "N√ÉO usa create_if_not_exists"
fi

# ============================================
# TESTE 7: Plugins Nativos Configurados (AC2)
# ============================================
info "Teste 7: Verificando plugins nativos..."

# Verificar que n√£o h√° plugins externos
if ! grep -q "community-plugins\|plugin.*download" "scripts/merge-obsidian-config.sh" 2>/dev/null; then
    success "Usa apenas plugins nativos (sem plugins externos)"
else
    warning "Pode conter refer√™ncias a plugins externos"
fi

# Verificar configura√ß√µes de performance
if grep -q "graph" "scripts/merge-obsidian-config.sh"; then
    success "Configura√ß√£o de Graph view inclu√≠da"
else
    fail "Configura√ß√£o de Graph view N√ÉO inclu√≠da"
fi

# ============================================
# TESTE 8: Documenta√ß√£o em Portugu√™s (Todos ACs)
# ============================================
info "Teste 8: Verificando documenta√ß√£o em portugu√™s..."

PORTUGUESE_WORDS=("Captura" "buscar" "agentes" "atalhos" "despejo")
FOUND_PORTUGUESE=0

for word in "${PORTUGUESE_WORDS[@]}"; do
    if grep -i -q "$word" "scripts/upgrade-to-epic3.sh" 2>/dev/null; then
        ((FOUND_PORTUGUESE++))
    fi
done

if [ $FOUND_PORTUGUESE -ge 4 ]; then
    success "Toda documenta√ß√£o em portugu√™s confirmada"
else
    fail "Documenta√ß√£o N√ÉO est√° adequadamente em portugu√™s"
fi

# ============================================
# TESTE 9: Performance e Simplicidade (AC2)
# ============================================
info "Teste 9: Verificando otimiza√ß√µes de performance..."

# Verificar que s√£o arquivos est√°ticos
if grep -q "create_if_not_exists.*knowledge-base" "scripts/upgrade-to-epic3.sh"; then
    success "Arquivos s√£o est√°ticos (zero custo de performance)"
else
    fail "Arquivos podem n√£o ser est√°ticos"
fi

# Verificar graph limitado
if grep -q "depth\|n√≠veis\|limitado" "scripts/merge-obsidian-config.sh" 2>/dev/null || \
   grep -q "nodeSizeMultiplier\|scale" "scripts/merge-obsidian-config.sh" 2>/dev/null; then
    success "Graph view otimizado para performance"
else
    warning "Graph view pode n√£o ter otimiza√ß√µes"
fi

# ============================================
# TESTE 10: Compatibilidade com Customiza√ß√µes (AC2)
# ============================================
info "Teste 10: Verificando preserva√ß√£o de customiza√ß√µes..."

# Verificar backup antes de modificar
if grep -q "backup\|BACKUP" "scripts/merge-obsidian-config.sh"; then
    success "Cria backup antes de modificar configura√ß√µes"
else
    fail "N√ÉO cria backup antes de modificar"
fi

# Verificar merge inteligente
if grep -q "if.*existe\|preserva\|merge" "scripts/merge-obsidian-config.sh" 2>/dev/null || \
   grep -q "workspace-suggested" "scripts/upgrade-to-epic3.sh"; then
    success "Preserva customiza√ß√µes do usu√°rio"
else
    warning "Pode n√£o preservar customiza√ß√µes adequadamente"
fi

# ============================================
# RESULTADO FINAL
# ============================================
echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "  RESULTADO DOS TESTES"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo -e "‚úÖ Testes APROVADOS: ${GREEN}${TESTS_PASSED}${NC}"
echo -e "‚ùå Testes FALHADOS:  ${RED}${TESTS_FAILED}${NC}"
echo ""

if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${GREEN}  ‚úÖ STORY 3.2 - TODOS OS TESTES PASSARAM!${NC}"
    echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo "Pr√≥ximos passos:"
    echo "  1. Executar upgrade: bash scripts/upgrade-to-epic3.sh"
    echo "  2. Abrir Obsidian e verificar dashboard"
    echo "  3. Testar busca Ctrl+O e Ctrl+Shift+F"
    echo "  4. Validar que configura√ß√µes foram aplicadas"
    exit 0
else
    echo -e "${RED}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${RED}  ‚ùå ALGUNS TESTES FALHARAM - CORRIJA ANTES DE CONTINUAR${NC}"
    echo -e "${RED}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    exit 1
fi
