#!/bin/bash
# backup-automatico.sh - Backup Automático Git Silencioso
# Sistema: Assistente Pessoal IA
# Story: 3.4 - Backup Automático Invisível

# Função para criar backup automático
fazer_backup() {
    local tipo=${1:-"manual"}
    local cache_file=".assistant-core/data/dashboard-cache.yaml"

    # Verificar se Git está inicializado
    if [ ! -d ".git" ]; then
        echo "⚠️  Git não inicializado. Execute: git init"
        return 1
    fi

    # Verificar se há mudanças
    if git diff --quiet && git diff --cached --quiet; then
        # Nenhuma mudança
        return 0
    fi

    # Contar arquivos modificados
    local arquivos_modificados=$(git status --porcelain | wc -l)

    # Ler estatísticas do cache (se existir)
    local conversas=0
    local streak=0
    if [ -f "$cache_file" ]; then
        conversas=$(grep "conversas_total:" "$cache_file" 2>/dev/null | awk '{print $2}' || echo "0")
        streak=$(grep "^streak_dias:" "$cache_file" 2>/dev/null | awk '{print $2}' || echo "0")
    fi

    # Criar mensagem de commit
    local timestamp=$(date +"%Y-%m-%d %H:%M:%S")
    local commit_msg=$(cat << EOF
✅ Backup automático: $tipo

Data: $timestamp
Arquivos modificados: $arquivos_modificados

📊 Status: $conversas conversas | Streak: $streak dias

🤖 Generated by Assistente Pessoal IA
EOF
)

    # Add todos os arquivos
    git add -A > /dev/null 2>&1

    # Commit
    git commit -m "$commit_msg" --quiet > /dev/null 2>&1

    # Push para remoto se configurado (assíncrono em background)
    if git remote | grep -q "origin" 2>/dev/null; then
        (git push origin main --quiet > /dev/null 2>&1 &)
    fi

    # Feedback visual não-intrusivo
    local hora=$(date +"%H:%M")
    echo "💾 Backup automático feito às $hora ✓"

    return 0
}

# Executar backup
if [ "$1" = "--silent" ]; then
    fazer_backup "$2" > /dev/null 2>&1
else
    fazer_backup "$1"
fi
