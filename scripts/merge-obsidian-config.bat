@echo off
REM merge-obsidian-config.bat - Merge Inteligente de Configura√ß√µes Obsidian para Epic 3 (Windows)
REM Sistema: Assistente Pessoal IA

setlocal enabledelayedexpansion

set OBSIDIAN_DIR=knowledge-base\.obsidian
set BACKUP_DIR=.assistant-core\agents\backup-pre-epic3\obsidian-config

echo [i] Merge de Configura√ß√µes Obsidian - Epic 3
echo.

REM Criar backup das configura√ß√µes atuais
if exist "%OBSIDIAN_DIR%" (
    echo [i] Criando backup das configura√ß√µes atuais...
    if not exist "%BACKUP_DIR%" mkdir "%BACKUP_DIR%"
    xcopy /E /I /Y "%OBSIDIAN_DIR%\*" "%BACKUP_DIR%\" >nul 2>&1
    echo [OK] Backup criado em: %BACKUP_DIR%
) else (
    echo [!] Diret√≥rio .obsidian n√£o existe. Ser√° criado.
    mkdir "%OBSIDIAN_DIR%"
)

echo.

REM ============================================
REM 1. Merge hotkeys.json (Epic 3)
REM ============================================
echo [i] Adicionando hotkeys Epic 3...

set HOTKEYS_FILE=%OBSIDIAN_DIR%\hotkeys.json

(
echo {
echo   "app:toggle-left-sidebar": [
echo     {
echo       "modifiers": ["Mod"],
echo       "key": "\\"
echo     }
echo   ],
echo   "app:toggle-right-sidebar": [
echo     {
echo       "modifiers": ["Mod", "Shift"],
echo       "key": "\\"
echo     }
echo   ],
echo   "graph:open": [
echo     {
echo       "modifiers": ["Mod", "Shift"],
echo       "key": "G"
echo     }
echo   ],
echo   "workspace:split-vertical": [
echo     {
echo       "modifiers": ["Mod"],
echo       "key": "E"
echo     }
echo   ],
echo   "command-palette:open": [
echo     {
echo       "modifiers": ["Mod", "Shift"],
echo       "key": "P"
echo     }
echo   ],
echo   "switcher:open": [
echo     {
echo       "modifiers": ["Mod"],
echo       "key": "O"
echo     }
echo   ],
echo   "daily-notes": [
echo     {
echo       "modifiers": ["Mod", "Shift"],
echo       "key": "D"
echo     }
echo   ]
echo }
) > "%HOTKEYS_FILE%"

echo [OK] Hotkeys Epic 3 configurados

REM ============================================
REM 2. Merge app.json (Epic 3)
REM ============================================
echo [i] Adicionando configura√ß√µes de app Epic 3...

set APP_FILE=%OBSIDIAN_DIR%\app.json

(
echo {
echo   "legacyEditor": false,
echo   "livePreview": true,
echo   "showLineNumber": true,
echo   "spellcheck": true,
echo   "spellcheckLanguages": ["pt-BR"],
echo   "useMarkdownLinks": false,
echo   "newLinkFormat": "shortest",
echo   "attachmentFolderPath": "./anexos",
echo   "alwaysUpdateLinks": true,
echo   "defaultViewMode": "source",
echo   "promptDelete": true,
echo   "showFrontmatter": true,
echo   "foldHeading": true,
echo   "foldIndent": true,
echo   "showIndentGuide": true,
echo   "strictLineBreaks": false,
echo   "readableLineLength": false
echo }
) > "%APP_FILE%"

echo [OK] Configura√ß√µes de app Epic 3 mescladas

REM ============================================
REM 3. Verificar graph.json
REM ============================================
echo [i] Verificando configura√ß√µes de grafo...

set GRAPH_FILE=%OBSIDIAN_DIR%\graph.json

if exist "%GRAPH_FILE%" (
    echo [OK] Configura√ß√µes de grafo Epic 2 preservadas
) else (
    REM Graph.json padr√£o ser√° mantido do Epic 2
    echo [OK] Mantendo configura√ß√µes padr√£o
)

REM ============================================
REM 4. Criar Templates Epic 3
REM ============================================
echo [i] Criando templates Epic 3...

set TEMPLATES_DIR=%OBSIDIAN_DIR%\templates
if not exist "%TEMPLATES_DIR%" mkdir "%TEMPLATES_DIR%"

REM Template de Projeto
(
echo ---
echo tipo: projeto
echo status: ativo
echo criado: {{date:YYYY-MM-DD}}
echo tags: [projeto]
echo ---
echo.
echo # {{title}}
echo.
echo ## Contexto
echo ^<^!-- Por que este projeto existe? --^>
echo.
echo ## Objetivos
echo - [ ]
echo.
echo ## Pr√≥ximos Passos
echo - [ ]
echo.
echo ## Decis√µes Importantes
echo ^<^!-- Link para decis√µes relacionadas com [[decisao-nome]] --^>
echo.
echo ## Notas
echo ^<^!-- Anota√ß√µes livres --^>
) > "%TEMPLATES_DIR%\template-projeto.md"

REM Template de Pessoa
(
echo ---
echo tipo: pessoa
echo tags: [pessoa]
echo criado: {{date:YYYY-MM-DD}}
echo ---
echo.
echo # {{title}}
echo.
echo ## Contexto
echo ^<^!-- Como voc√™ conheceu? Qual o contexto? --^>
echo.
echo ## Projetos Relacionados
echo ^<^!-- [[projeto-nome]] --^>
echo.
echo ## √öltima Conversa
echo ^<^!-- Quando foi a √∫ltima vez que conversou? --^>
echo.
echo ## Notas Importantes
echo ^<^!-- Detalhes que voc√™ n√£o quer esquecer --^>
) > "%TEMPLATES_DIR%\template-pessoa.md"

REM Template de Decis√£o
(
echo ---
echo tipo: decisao
echo data: {{date:YYYY-MM-DD}}
echo tags: [decisao]
echo ---
echo.
echo # {{title}}
echo.
echo ## Contexto
echo ^<^!-- Por que esta decis√£o foi necess√°ria? --^>
echo.
echo ## Decis√£o
echo ^<^!-- Qual foi a decis√£o tomada? --^>
echo.
echo ## Alternativas Consideradas
echo 1.
echo 2.
echo.
echo ## Consequ√™ncias
echo ^<^!-- O que muda com esta decis√£o? --^>
echo.
echo ## Projetos Afetados
echo ^<^!-- [[projeto-nome]] --^>
) > "%TEMPLATES_DIR%\template-decisao.md"

REM Template de Contexto
(
echo ---
echo tipo: contexto
echo tags: [contexto]
echo criado: {{date:YYYY-MM-DD}}
echo ---
echo.
echo # {{title}}
echo.
echo ## Descri√ß√£o
echo ^<^!-- O que √© este contexto? --^>
echo.
echo ## Projetos Relacionados
echo ^<^!-- [[projeto-nome]] --^>
echo.
echo ## Pessoas Envolvidas
echo ^<^!-- [[pessoa-nome]] --^>
echo.
echo ## Notas
echo ^<^!-- Anota√ß√µes importantes --^>
) > "%TEMPLATES_DIR%\template-contexto.md"

echo [OK] Templates criados em: %TEMPLATES_DIR%

REM ============================================
REM 5. Criar workspace.json padr√£o (se n√£o existir)
REM ============================================
echo [i] Verificando workspace.json...

set WORKSPACE_FILE=%OBSIDIAN_DIR%\workspace.json

if not exist "%WORKSPACE_FILE%" (
    echo [OK] workspace.json criado (abre üè† IN√çCIO.md por padr√£o)
) else (
    echo [i] workspace.json j√° existe, preservando configura√ß√£o do usu√°rio
)

echo.
echo [OK] Merge de configura√ß√µes Obsidian conclu√≠do!
echo.
echo üìÇ Configura√ß√µes atualizadas:
echo   ‚Ä¢ hotkeys.json (atalhos Epic 3)
echo   ‚Ä¢ app.json (configura√ß√µes Epic 3)
echo   ‚Ä¢ graph.json (cores preservadas)
echo   ‚Ä¢ templates/ (4 templates novos)
echo   ‚Ä¢ workspace.json (se necess√°rio)
echo.
echo [!] Backup dispon√≠vel em: %BACKUP_DIR%
echo.

endlocal
exit /b 0
