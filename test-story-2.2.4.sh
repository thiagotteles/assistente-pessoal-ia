#!/bin/bash

# Teste da Story 2.2.4: Atualiza√ß√£o de Documenta√ß√£o Arquitetural
# Verifica se a documenta√ß√£o foi atualizada corretamente

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Contadores
TESTS_PASSED=0
TESTS_FAILED=0

# Fun√ß√£o de teste
test_condition() {
    local description="$1"
    local condition="$2"

    echo -n "  Testing: $description... "

    if eval "$condition"; then
        echo -e "${GREEN}PASS${NC}"
        ((TESTS_PASSED++))
        return 0
    else
        echo -e "${RED}FAIL${NC}"
        ((TESTS_FAILED++))
        return 1
    fi
}

echo -e "${BLUE}=== Teste da Story 2.2.4: Atualiza√ß√£o de Documenta√ß√£o Arquitetural ===${NC}"
echo ""

echo -e "${YELLOW}1. Testando Crit√©rio de Aceita√ß√£o 1: Documenta√ß√£o Arquitetural Atualizada${NC}"
test_condition "estrutura-de-arquivos-source-tree.md existe" "[ -f docs/architecture/estrutura-de-arquivos-source-tree.md ]"
test_condition "estrutura-de-arquivos-source-tree.md inclui padr√µes √∫nicos" "grep -q 'Padr√µes de Arquivos √önicos' docs/architecture/estrutura-de-arquivos-source-tree.md"
test_condition "padroes-de-codificacao.md existe" "[ -f docs/architecture/padres-de-codificao.md ]"
test_condition "padroes-de-codificacao.md inclui arquivos √∫nicos" "grep -q 'pessoa-{nome}.md' docs/architecture/padres-de-codificao.md"

echo ""
echo -e "${YELLOW}2. Testando Crit√©rio de Aceita√ß√£o 2: Guia de Exemplos Pr√°ticos Criado${NC}"
test_condition "exemplos-estrutura-unificada.md foi criado" "[ -f docs/architecture/exemplos-estrutura-unificada.md ]"
test_condition "exemplos inclui pessoa-fabio.md" "grep -q 'pessoa-fabio.md' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "exemplos inclui projeto-onboarding.md" "grep -q 'projeto-onboarding.md' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "exemplos inclui contexto-bem-estar.md" "grep -q 'contexto-bem-estar.md' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "exemplos t√™m templates funcionais" "grep -q 'Template: Nova Pessoa' docs/architecture/exemplos-estrutura-unificada.md"

echo ""
echo -e "${YELLOW}3. Testando Crit√©rio de Aceita√ß√£o 3: Guidelines para Desenvolvedores${NC}"
test_condition "guidelines-desenvolvedores.md foi criado" "[ -f docs/architecture/guidelines-desenvolvedores.md ]"
test_condition "guidelines incluem padr√µes para agentes" "grep -q 'Padr√µes para Novos Agentes' docs/architecture/guidelines-desenvolvedores.md"
test_condition "guidelines incluem checklist compatibilidade" "grep -q 'Checklist de Compatibilidade' docs/architecture/guidelines-desenvolvedores.md"
test_condition "guidelines incluem targets de performance" "grep -q 'Targets de Performance' docs/architecture/guidelines-desenvolvedores.md"

echo ""
echo -e "${YELLOW}4. Testando Crit√©rio de Aceita√ß√£o 4: Documenta√ß√£o de Migra√ß√£o${NC}"
test_condition "guia-migracao-arquivos-unicos.md foi criado" "[ -f docs/architecture/guia-migracao-arquivos-unicos.md ]"
test_condition "guia inclui processo completo de migra√ß√£o" "grep -q 'Processo Detalhado de Migra√ß√£o' docs/architecture/guia-migracao-arquivos-unicos.md"
test_condition "guia inclui troubleshooting" "grep -q 'Troubleshooting Comum' docs/architecture/guia-migracao-arquivos-unicos.md"
test_condition "guia inclui procedures de rollback" "grep -q 'Rollback Completo' docs/architecture/guia-migracao-arquivos-unicos.md"

echo ""
echo -e "${YELLOW}5. Testando Crit√©rio de Aceita√ß√£o 5: Exemplos Funcionais Validados${NC}"
test_condition "Metadados YAML est√£o v√°lidos nos exemplos" "grep -A 10 '```yaml' docs/architecture/exemplos-estrutura-unificada.md | grep -q 'tipo:'"
test_condition "Refer√™ncias [[]] est√£o corretas" "grep -q '\[\[pessoa-fabio\]\]' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "Templates t√™m estrutura completa" "grep -q '## Metadados' docs/architecture/exemplos-estrutura-unificada.md"

echo ""
echo -e "${YELLOW}6. Testando estrutura de arquivos de documenta√ß√£o${NC}"
test_condition "Todos os arquivos t√™m extens√£o .md" "
    for file in docs/architecture/exemplos-estrutura-unificada.md docs/architecture/guidelines-desenvolvedores.md docs/architecture/guia-migracao-arquivos-unicos.md; do
        [[ \"\$file\" == *.md ]] || exit 1
    done
"
test_condition "Arquivos n√£o est√£o vazios" "
    for file in docs/architecture/exemplos-estrutura-unificada.md docs/architecture/guidelines-desenvolvedores.md docs/architecture/guia-migracao-arquivos-unicos.md; do
        [ -s \"\$file\" ] || exit 1
    done
"

echo ""
echo -e "${YELLOW}7. Testando conte√∫do baseado na Story 2.2.1${NC}"
test_condition "Documenta√ß√£o referencia Story 2.2.1" "grep -r 'Story 2.2.1' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "Exemplos usam dados reais migrados" "grep -q 'Fabio' docs/architecture/exemplos-estrutura-unificada.md"
test_condition "Guidelines referenciam scripts implementados" "grep -q 'migrate-to-unified-files.sh' docs/architecture/guidelines-desenvolvedores.md"

echo ""
echo -e "${YELLOW}8. Testando integra√ß√£o com arquitetura existente${NC}"
test_condition "Documenta√ß√£o mant√©m compatibilidade" "grep -q 'Obsidian' docs/architecture/estrutura-de-arquivos-source-tree.md"
test_condition "Padr√µes seguem conven√ß√µes existentes" "grep -q 'knowledge-base' docs/architecture/padres-de-codificao.md"

echo ""
echo -e "${BLUE}=== RESUMO DOS TESTES ===${NC}"

TOTAL_TESTS=$((TESTS_PASSED + TESTS_FAILED))

echo -e "${GREEN}‚úÖ Testes passaram: $TESTS_PASSED${NC}"
if [ $TESTS_FAILED -gt 0 ]; then
    echo -e "${RED}‚ùå Testes falharam: $TESTS_FAILED${NC}"
fi
echo -e "${BLUE}üìä Total de testes: $TOTAL_TESTS${NC}"

echo ""
if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}üéâ TODOS OS TESTES PASSARAM! Story 2.2.4 implementada com sucesso!${NC}"
    echo ""
    echo -e "${YELLOW}‚úÖ Documenta√ß√£o arquitetural atualizada${NC}"
    echo -e "${YELLOW}‚úÖ Guia de exemplos pr√°ticos criado${NC}"
    echo -e "${YELLOW}‚úÖ Guidelines para desenvolvedores implementadas${NC}"
    echo -e "${YELLOW}‚úÖ Documenta√ß√£o de migra√ß√£o completa${NC}"
    echo -e "${YELLOW}‚úÖ Exemplos funcionais validados${NC}"
    echo ""
    echo -e "${BLUE}üìö Documenta√ß√£o pronta para suportar pr√≥ximas stories!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå ALGUNS TESTES FALHARAM! Verifique os problemas acima.${NC}"
    exit 1
fi